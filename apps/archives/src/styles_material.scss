@use '~@angular/material' as mat;
@use 'shared/colors' as shared-colors;
@use 'shared/palettes' as shared-palletes;
@import '@angular/material/theming.scss';

@include mat.core();

$theme-primary: mat.define-palette(shared-palletes.$dark-colors, 800, 700, 900);
$theme-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$theme-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat.define-dark-theme(
  (
    color: (
      primary: $theme-primary,
      accent: $theme-accent,
      warn: $theme-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);

mat-bottom-sheet-container {
  background-color: shared-colors.$background-second !important;
  color: shared-colors.$font-primary;
}

.mat-menu-panel {
  background-color: shared-colors.$background-third !important;
  color: shared-colors.$font-primary !important;
}

.mat-menu-item {
  color: shared-colors.$font-primary !important;

  .mat-icon {
    color: shared-colors.$font-primary !important;
  }
}

mat-toolbar {
  @include mat.elevation(6);
  color: shared-colors.$font-primary !important;
}

a {
  color: shared-colors.$font-primary !important;
}

mat-list-item {
  color: shared-colors.$font-primary !important;
}
